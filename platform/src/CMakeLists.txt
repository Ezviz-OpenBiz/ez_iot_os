cmake_minimum_required(VERSION 2.8)

SET(CMAKE_TOOLCHAIN_FILE "ToolChain.cmake")

PROJECT(ez_os_platform)
SET(USE_STATIC_LIB_LINKAGE ON)


#添加编译选项
ADD_DEFINITIONS("-Wall")
ADD_DEFINITIONS("-DNETBSD -D_LARGEFILE_SOURCE -D_LARGE_FILES -DFTP_COMBINE_CWDS")
ADD_DEFINITIONS("-DWITH_POSIX")

if(DEFINED PRECOMPILE_MACRO)
	ADD_DEFINITIONS("${PRECOMPILE_MACRO}")
endif()

if(DEFINED PLATFORM_C_FLAGS)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${PLATFORM_C_FLAGS}")
else()
	SET(CMAKE_C_FLAGS "-O2 -g  -Wall")
endif()	

if(DEFINED PLATFORM_CXX_FLAGS)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${PLATFORM_CXX_FLAGS}")
else()
	SET(CMAKE_CXX_FLAGS "-O2 -g -Wall -fno-rtti -fno-exceptions ")
endif()

if(CMAKE_SYSTEM_NAME STREQUAL "rt_thread")
    ADD_DEFINITIONS("-D_RT_THREAD_")
	SET(WRAPPER_DIR rt-thread)
elseif(CMAKE_SYSTEM_NAME STREQUAL "ANDROID")
    ADD_DEFINITIONS("-D_ANDROID_")
	SET(WRAPPER_DIR linux)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	ADD_DEFINITIONS("-D_LINUX_")
	SET(WRAPPER_DIR linux)
else()
	ADD_DEFINITIONS("-D_LINUX_")
	SET(WRAPPER_DIR linux)
endif()


AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/${WRAPPER_DIR} ezos)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/${WRAPPER_DIR}
                    ${PROJECT_SOURCE_DIR}/../inc)

MESSAGE(STATUS "c compile option: ${CMAKE_C_FLAGS}")
MESSAGE(STATUS "c++ compile option: ${CMAKE_CXX_FLAGS}")

ADD_LIBRARY(ez_os_platform_STATIC STATIC ${ezos})
SET_TARGET_PROPERTIES(ez_os_platform_STATIC PROPERTIES OUTPUT_NAME ez_os_platform)

IF (${DYNAMIC})
	ADD_LIBRARY(ez_os_platform_SHARED SHARED ${ezos})
	SET_TARGET_PROPERTIES(ez_os_platform_SHARED PROPERTIES OUTPUT_NAME ez_os_platform)
ENDIF (${DYNAMIC})

SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/../lib)
